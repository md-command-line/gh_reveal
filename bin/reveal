#!/usr/bin/env bash
reveal() {
    ___reveal_is_zsh(){
        test -n "$ZSH_VERSION"
    }

    if ___reveal_is_zsh; then
        setopt localoptions shwordsplit
    fi

  ___reveal__find_open_command_from_Operating_System() {
    local open_cmd
    OSTYPE="$(uname -s | tr 'A-Z' 'a-z')"

    case "$OSTYPE" in
    darwin*)  open_cmd='open' ;;
    cygwin*)  open_cmd='cygstart' ;;
    linux*)   [[ "$(uname -r)" != *icrosoft* ]] && open_cmd='nohup xdg-open' || {
                open_cmd='cmd.exe /c start ""'
                } ;;
    msys*)    open_cmd='start ""' ;;
    *)        echo "Platform $OSTYPE not supported"
                return 1
                ;;
    esac
    echo "$open_cmd"
}

  ___reveal_no_git_dir_no_args() { # length of "$1" is zero and is not a git directory.
    if [[ -z "$1" ]] && ! command git rev-parse --git-dir 2> /dev/null 1>&2; then
      return 0
    else
      return 1
    fi
  }

  ___reveal_no_git_dir_yes_args() { # length of "$1" is not zero and is not a git directory.
    if [[ -n "$1" ]] && ! command git rev-parse --git-dir 2> /dev/null 1>&2; then
      return 0
    else
      return 1
    fi
  }

  local open_cmd=$(___reveal__find_open_command_from_Operating_System)
  if [[ -z "$GITHUB_ACCOUNT" ]]; then
    local name=$(git config user.name)
  else
    local name="$GITHUB_ACCOUNT"
  fi

  if ___reveal_no_git_dir_no_args $1; then
    $open_cmd "https://github.com/$name?tab=repositories" >/dev/null 2>&1
    unset -f ___reveal__find_open_command_from_Operating_System
    unset -f ___reveal_no_git_dir_no_args
    unset -f ___reveal_no_git_dir_yes_args
    return 0
  elif ___reveal_no_git_dir_yes_args $1; then
    for dir in "$@" ; do
      ( builtin cd "$dir" && reveal; )
    done
    unset -f ___reveal__find_open_command_from_Operating_System
    unset -f ___reveal_no_git_dir_no_args
    unset -f ___reveal_no_git_dir_yes_args
    unset -f ___reveal_is_zsh
    return 0
  fi

  argValues="$@";
  command git remote -v | command grep -E "$(echo ${argValues/ /|})" | command grep 'heroku' | command grep fetch | command grep -o -E ':.*' | \
      cut -c 19- | command awk '{print $1}' | command sed 's@.git$@@' | \
      command xargs -I {} $open_cmd https://dashboard.heroku.com/apps/{} https://{}.herokuapp.com >/dev/null 2>&1
  {
      command git remote -v | command grep -E "$(echo ${argValues/ /|})" | command grep '@'  | command grep -o -E '@.*' | command sed 's@:@/@g' | cut -c 2-
      command git remote -v | command grep -E "$(echo ${argValues/ /|})" | command grep '//' | command grep -o -E ':.*' | cut -c 4- | command grep -v 'heroku'
  } | command grep fetch | command perl -pe 's@:\d{1,5}/@/@' | command awk '{print $1}' | sed 's@.git$@@' | command xargs -I {} $open_cmd https://{} >/dev/null 2>&1

    unset -f ___reveal__find_open_command_from_Operating_System
    unset -f ___reveal_no_git_dir_no_args
    unset -f ___reveal_no_git_dir_yes_args
    unset -f ___reveal_is_zsh

}

reveal "$@"
